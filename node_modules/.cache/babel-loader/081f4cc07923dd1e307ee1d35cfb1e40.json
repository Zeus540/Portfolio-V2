{"ast":null,"code":"import _slicedToArray from \"/home/zeus/Personal/Portfolio-V2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n\n  const _React$useState = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        actualRef = _React$useState2[0]; // eslint-disable-next-line prettier/prettier\n\n\n  const _React$useState3 = React.useState(() => new AnimationMixer(undefined)),\n        _React$useState4 = _slicedToArray(_React$useState3, 1),\n        mixer = _React$useState4[0];\n\n  const lazyActions = React.useRef({});\n\n  const _React$useState5 = React.useState(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      }\n\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 1),\n        api = _React$useState6[0];\n\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };","map":null,"metadata":{},"sourceType":"module"}