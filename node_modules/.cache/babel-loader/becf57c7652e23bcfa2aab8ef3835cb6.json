{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nconst OrthographicCamera =\n/*#__PURE__*/\nReact.forwardRef(({\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef();\n  React.useLayoutEffect(() => {\n    if (cameraRef.current && !props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"orthographicCamera\", _extends({\n      left: size.width / -2,\n      right: size.width / 2,\n      top: size.height / 2,\n      bottom: size.height / -2,\n      ref: mergeRefs([cameraRef, ref])\n    }, props))\n  );\n});\nexport { OrthographicCamera };","map":null,"metadata":{},"sourceType":"module"}