{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nvar vertexDict = ['color', 'color2'],\n    fragmentDict = ['vColor', 'vColor2'];\n\nfunction ColorsNode(index) {\n  TempNode.call(this, 'v4', {\n    shared: false\n  });\n  this.index = index || 0;\n}\n\nColorsNode.prototype = Object.create(TempNode.prototype);\nColorsNode.prototype.constructor = ColorsNode;\nColorsNode.prototype.nodeType = 'Colors';\n\nColorsNode.prototype.generate = function (builder, output) {\n  builder.requires.color[this.index] = true;\n  var result = builder.isShader('vertex') ? vertexDict[this.index] : fragmentDict[this.index];\n  return builder.format(result, this.getType(builder), output);\n};\n\nColorsNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.index = source.index;\n  return this;\n};\n\nColorsNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.index = this.index;\n  }\n\n  return data;\n};\n\nexport { ColorsNode };","map":null,"metadata":{},"sourceType":"module"}