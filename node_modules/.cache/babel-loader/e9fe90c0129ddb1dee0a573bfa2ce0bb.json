{"ast":null,"code":"import _slicedToArray from \"/home/zeus/Personal/Portfolio-V2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { createPortal } from '@react-three/fiber';\nimport { Flow } from 'three-stdlib';\nconst CurveModifier =\n/*#__PURE__*/\nReact.forwardRef(({\n  children,\n  curve\n}, ref) => {\n  const _React$useState = React.useState(() => new THREE.Scene()),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        scene = _React$useState2[0];\n\n  const _React$useState3 = React.useState(),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        obj = _React$useState4[0],\n        set = _React$useState4[1];\n\n  const modifier = React.useRef();\n  React.useEffect(() => {\n    modifier.current = new Flow(scene.children[0]);\n    set(modifier.current.object3D);\n  }, [children]);\n  React.useEffect(() => {\n    var _modifier$current;\n\n    if (curve) (_modifier$current = modifier.current) == null ? void 0 : _modifier$current.updateCurve(0, curve);\n  }, [curve]);\n  React.useImperativeHandle(ref, () => ({\n    moveAlongCurve: val => {\n      var _modifier$current2;\n\n      (_modifier$current2 = modifier.current) == null ? void 0 : _modifier$current2.moveAlongCurve(val);\n    }\n  }));\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null, createPortal(children, scene), obj &&\n    /*#__PURE__*/\n    React.createElement(\"primitive\", {\n      object: obj\n    }))\n  );\n});\nexport { CurveModifier };","map":null,"metadata":{},"sourceType":"module"}