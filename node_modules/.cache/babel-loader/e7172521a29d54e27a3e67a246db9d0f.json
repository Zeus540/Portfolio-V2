{"ast":null,"code":"import { Node } from '../../core/Node.js';\n\nfunction RawNode(value) {\n  Node.call(this, 'v4');\n  this.value = value;\n}\n\nRawNode.prototype = Object.create(Node.prototype);\nRawNode.prototype.constructor = RawNode;\nRawNode.prototype.nodeType = 'Raw';\n\nRawNode.prototype.generate = function (builder) {\n  var data = this.value.analyzeAndFlow(builder, this.type),\n      code = data.code + '\\n';\n\n  if (builder.isShader('vertex')) {\n    code += 'gl_Position = ' + data.result + ';';\n  } else {\n    code += 'gl_FragColor = ' + data.result + ';';\n  }\n\n  return code;\n};\n\nRawNode.prototype.copy = function (source) {\n  Node.prototype.copy.call(this, source);\n  this.value = source.value;\n  return this;\n};\n\nRawNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { RawNode };","map":null,"metadata":{},"sourceType":"module"}