{"ast":null,"code":"import _objectWithoutProperties from \"/home/zeus/Personal/Portfolio-V2/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\nconst MapControls =\n/*#__PURE__*/\nReact.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const camera = props.camera,\n        onChange = props.onChange,\n        onStart = props.onStart,\n        onEnd = props.onEnd,\n        rest = _objectWithoutProperties(props, [\"camera\", \"onChange\", \"onStart\", \"onEnd\"]);\n\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const domElement = useThree(({\n    gl\n  }) => gl.domElement);\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(domElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, domElement]);\n  useFrame(() => controls.update());\n  return (\n    /*#__PURE__*/\n    React.createElement(\"primitive\", _extends({\n      ref: ref,\n      dispose: undefined,\n      object: controls,\n      enableDamping: true\n    }, rest))\n  );\n});\nexport { MapControls };","map":null,"metadata":{},"sourceType":"module"}