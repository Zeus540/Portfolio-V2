{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\nconst eps = 0.00001;\n\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\n\nconst RoundedBox =\n/*#__PURE__*/\nReact.forwardRef(function RoundedBox({\n  args: [width = 1, height = 1, depth = 1] = [],\n  radius = 0.05,\n  steps = 1,\n  smoothness = 4,\n  children,\n  ...rest\n}, ref) {\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = React.useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = React.useRef();\n  React.useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n    }\n  }, [shape, params]);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, rest),\n    /*#__PURE__*/\n    React.createElement(\"extrudeBufferGeometry\", {\n      attach: \"geometry\",\n      ref: geomRef,\n      args: [shape, params]\n    }), children)\n  );\n});\nexport { RoundedBox };","map":null,"metadata":{},"sourceType":"module"}