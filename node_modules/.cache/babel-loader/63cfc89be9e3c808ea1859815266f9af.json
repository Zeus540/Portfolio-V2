{"ast":null,"code":"import { GLTFLoader } from '../loaders/GLTFLoader.js';\nconst DEFAULT_HAND_PROFILE_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/';\n\nclass XRHandMeshModel {\n  constructor(handModel, controller, path, handedness) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.bones = [];\n    const loader = new GLTFLoader();\n    loader.setPath(path || DEFAULT_HAND_PROFILE_PATH);\n    loader.load(`${handedness}.glb`, gltf => {\n      const object = gltf.scene.children[0];\n      this.handModel.add(object);\n      const mesh = object.getObjectByProperty('type', 'SkinnedMesh');\n      mesh.frustumCulled = false;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      const joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n      joints.forEach(jointName => {\n        const bone = object.getObjectByName(jointName);\n\n        if (bone !== undefined) {\n          bone.jointName = jointName;\n        } else {\n          console.warn(`Couldn't find ${jointName} in ${handedness} hand mesh`);\n        }\n\n        this.bones.push(bone);\n      });\n    });\n  }\n\n  updateMesh() {\n    // XR Joints\n    const XRJoints = this.controller.joints;\n\n    for (let i = 0; i < this.bones.length; i++) {\n      const bone = this.bones[i];\n\n      if (bone) {\n        const XRJoint = XRJoints[bone.jointName];\n\n        if (XRJoint.visible) {\n          const position = XRJoint.position;\n          bone.position.copy(position);\n          bone.quaternion.copy(XRJoint.quaternion); // bone.scale.setScalar( XRJoint.jointRadius || defaultRadius );\n        }\n      }\n    }\n  }\n\n}\n\nexport { XRHandMeshModel };","map":null,"metadata":{},"sourceType":"module"}