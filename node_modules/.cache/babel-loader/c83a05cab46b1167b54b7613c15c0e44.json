{"ast":null,"code":"import _slicedToArray from \"/home/zeus/Personal/Portfolio-V2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction e(e, r, n, t) {\n  return new (n || (n = Promise))(function (o, a) {\n    function i(e) {\n      try {\n        c(t.next(e));\n      } catch (e) {\n        a(e);\n      }\n    }\n\n    function d(e) {\n      try {\n        c(t.throw(e));\n      } catch (e) {\n        a(e);\n      }\n    }\n\n    function c(e) {\n      var r;\n      e.done ? o(e.value) : (r = e.value, r instanceof n ? r : new n(function (e) {\n        e(r);\n      })).then(i, d);\n    }\n\n    c((t = t.apply(e, r || [])).next());\n  });\n}\n\nconst r = [\"geforce 320m\", \"geforce 8600\", \"geforce 8600m gt\", \"geforce 8800 gs\", \"geforce 8800 gt\", \"geforce 9400\", \"geforce 9400m g\", \"geforce 9400m\", \"geforce 9600m gt\", \"geforce 9600m\", \"geforce fx go5200\", \"geforce gt 120\", \"geforce gt 130\", \"geforce gt 330m\", \"geforce gtx 285\", \"google swiftshader\", \"intel g41\", \"intel g45\", \"intel gma 4500mhd\", \"intel gma x3100\", \"intel hd 3000\", \"intel q45\", \"legacy\", \"mali-2\", \"mali-3\", \"mali-4\", \"quadro fx 1500\", \"quadro fx 4\", \"quadro fx 5\", \"radeon hd 2400\", \"radeon hd 2600\", \"radeon hd 4670\", \"radeon hd 4850\", \"radeon hd 4870\", \"radeon hd 5670\", \"radeon hd 5750\", \"radeon hd 6290\", \"radeon hd 6300\", \"radeon hd 6310\", \"radeon hd 6320\", \"radeon hd 6490m\", \"radeon hd 6630m\", \"radeon hd 6750m\", \"radeon hd 6770m\", \"radeon hd 6970m\", \"radeon r9 200\", \"sgx 543\", \"sgx543\"],\n      n = e => e = e.toLowerCase().replace(/^angle ?\\((.+)\\)*$/, \"$1\").replace(/\\s(\\d{1,2}gb|direct3d.+$)|\\(r\\)| \\([^)]+\\)$/g, \"\"),\n      t = \"undefined\" == typeof window,\n      o = (() => {\n  if (t) return;\n  const _window$navigator = window.navigator,\n        e = _window$navigator.userAgent,\n        r = _window$navigator.platform,\n        n = _window$navigator.maxTouchPoints,\n        o = /(iphone|ipod|ipad)/i.test(e),\n        a = \"iPad\" === r || \"MacIntel\" === r && n > 0 && !window.MSStream;\n  return {\n    isIpad: a,\n    isMobile: /android/i.test(e) || o || a,\n    isSafari12: /Version\\/12.+Safari/.test(e)\n  };\n})(),\n      a = (e, r, n) => \"apple gpu\" === r ? ((e, r, n) => {\n  let t = [r];\n\n  if (n) {\n    const r = \"\\n      precision highp float;\\n      attribute vec3 aPosition;\\n      varying float vvv;\\n      void main() {\\n        vvv = 0.31622776601683794;\\n        gl_Position = vec4(aPosition, 1.0);\\n      }\\n    \",\n          n = \"\\n      precision highp float;\\n      varying float vvv;\\n      void main() {\\n        vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * vvv;\\n        enc = fract(enc);\\n        enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\\n        gl_FragColor = enc;\\n      }\\n    \",\n          a = e.createShader(35633),\n          i = e.createShader(35632),\n          d = e.createProgram();\n\n    if (i && a && d) {\n      e.shaderSource(a, r), e.shaderSource(i, n), e.compileShader(a), e.compileShader(i), e.attachShader(d, a), e.attachShader(d, i), e.linkProgram(d), e.detachShader(d, a), e.detachShader(d, i), e.deleteShader(a), e.deleteShader(i), e.useProgram(d);\n      const c = e.createBuffer();\n      e.bindBuffer(34962, c), e.bufferData(34962, new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]), 35044);\n      const l = e.getAttribLocation(d, \"aPosition\");\n      e.vertexAttribPointer(l, 3, 5126, !1, 0, 0), e.enableVertexAttribArray(l), e.clearColor(1, 1, 1, 1), e.clear(16384), e.viewport(0, 0, 1, 1), e.drawArrays(4, 0, 3);\n      const f = new Uint8Array(4);\n      e.readPixels(0, 0, 1, 1, 6408, 5121, f), e.deleteProgram(d), e.deleteBuffer(c), t = {\n        801621810: (null == o ? void 0 : o.isIpad) ? [\"apple a12x gpu\"] : [\"apple a11 gpu\", \"apple a12 gpu\", \"apple a13 gpu\", \"apple a14 gpu\"],\n        8016218135: (null == o ? void 0 : o.isIpad) ? [\"apple a9x gpu\", \"apple a10 gpu\", \"apple a10x gpu\"] : [\"apple a9 gpu\", \"apple a10 gpu\"]\n      }[f.join(\"\")] || t;\n    }\n  }\n\n  return t;\n})(e, r, n) : [r],\n      i = [],\n      d = [],\n      c = (e, r) => {\n  if (e === r) return 0;\n  const n = e;\n  e.length > r.length && (e = r, r = n);\n  let t = e.length,\n      o = r.length;\n\n  for (; t > 0 && e.charCodeAt(~-t) === r.charCodeAt(~-o);) t--, o--;\n\n  let a,\n      c = 0;\n\n  for (; c < t && e.charCodeAt(c) === r.charCodeAt(c);) c++;\n\n  if (t -= c, o -= c, 0 === t) return o;\n  let l,\n      f,\n      s = 0,\n      g = 0,\n      p = 0;\n\n  for (; g < t;) d[g] = e.charCodeAt(c + g), i[g] = ++g;\n\n  for (; p < o;) for (a = r.charCodeAt(c + p), l = p++, s = p, g = 0; g < t; g++) f = a === d[g] ? l : l + 1, l = i[g], s = i[g] = l > s ? f > s ? s + 1 : f : f > l ? l + 1 : f;\n\n  return s;\n},\n      l = ({\n  mobileTiers: i = [0, 15, 30, 60],\n  desktopTiers: d = [0, 15, 30, 60],\n  override: l = {},\n  glContext: f,\n  failIfMajorPerformanceCaveat: s = !1,\n  benchmarksURL: g = \"https://unpkg.com/detect-gpu@3.1.30/dist/benchmarks\"\n} = {}) => e(void 0, void 0, void 0, function* () {\n  const p = {};\n  if (t) return {\n    tier: 0,\n    type: \"SSR\"\n  };\n  const _l$isIpad = l.isIpad,\n        u = _l$isIpad === void 0 ? !!(null == o ? void 0 : o.isIpad) : _l$isIpad,\n        _l$isMobile = l.isMobile,\n        h = _l$isMobile === void 0 ? !!(null == o ? void 0 : o.isMobile) : _l$isMobile,\n        _l$screenSize = l.screenSize,\n        v = _l$screenSize === void 0 ? window.screen : _l$screenSize,\n        _l$loadBenchmarks = l.loadBenchmarks,\n        m = _l$loadBenchmarks === void 0 ? r => e(void 0, void 0, void 0, function* () {\n    const e = yield fetch(`${g}/${r}`).then(e => e.json());\n    return e.shift(), e;\n  }) : _l$loadBenchmarks;\n  let w = l.renderer;\n\n  const A = (e, r, n, t, o) => ({\n    device: o,\n    fps: t,\n    gpu: n,\n    isMobile: h,\n    tier: e,\n    type: r\n  });\n\n  let x,\n      S = \"\";\n  if (w) w = n(w), x = [w];else {\n    const e = f || ((e, r = !1) => {\n      const n = {\n        alpha: !1,\n        antialias: !1,\n        depth: !1,\n        failIfMajorPerformanceCaveat: r,\n        powerPreference: \"high-performance\",\n        stencil: !1\n      };\n      e && delete n.powerPreference;\n      const t = window.document.createElement(\"canvas\"),\n            o = t.getContext(\"webgl\", n) || t.getContext(\"experimental-webgl\", n);\n      return null != o ? o : void 0;\n    })(null == o ? void 0 : o.isSafari12, s);\n\n    if (!e) return A(0, \"WEBGL_UNSUPPORTED\");\n    const r = e.getExtension(\"WEBGL_debug_renderer_info\");\n    if (r && (w = e.getParameter(r.UNMASKED_RENDERER_WEBGL)), !w) return A(1, \"FALLBACK\");\n    S = w, w = n(w), x = a(e, w, h);\n  }\n  const b = (yield Promise.all(x.map(r => e(void 0, void 0, void 0, function* () {\n    const e = (e => {\n      const r = h ? [\"adreno\", \"apple\", \"mali-t\", \"mali\", \"nvidia\", \"powervr\"] : [\"intel\", \"amd\", \"radeon\", \"nvidia\", \"geforce\"];\n\n      for (const n of r) if (e.includes(n)) return n;\n    })(r);\n\n    if (!e) return;\n    const n = `${h ? \"m\" : \"d\"}-${e}.json`,\n          t = p[n] = p[n] || m(n);\n    let o;\n\n    try {\n      o = yield t;\n    } catch (e) {\n      return;\n    }\n\n    const a = (e => {\n      var r;\n      const n = (e = e.replace(/\\([^)]+\\)/, \"\")).match(/\\d+/) || e.match(/(\\W|^)([A-Za-z]{1,3})(\\W|$)/g);\n      return null !== (r = null == n ? void 0 : n.join(\"\").replace(/\\W|amd/g, \"\")) && void 0 !== r ? r : \"\";\n    })(r),\n          i = \"apple\" === e;\n\n    let d = o.filter(([, e]) => e === a);\n    d.length || (d = o.filter(([e]) => e.includes(r)));\n    const l = d.length;\n    if (0 === l) return;\n\n    let f,\n        _ref = l > 1 ? d.map(e => [e, c(r, e[0])]).sort(([, e], [, r]) => e - r)[0][0] : d[0],\n        _ref2 = _slicedToArray(_ref, 4),\n        s = _ref2[0],\n        g = _ref2[3],\n        w = Number.MAX_VALUE;\n\n    const _window = window,\n          A = _window.devicePixelRatio,\n          x = v.width * A * (v.height * A);\n    i && h && (g = g.filter(([,,, e]) => {\n      var r;\n      return (null !== (r = null == e ? void 0 : e.indexOf(u ? \"ipad\" : \"iphone\")) && void 0 !== r ? r : -1) > -1;\n    }));\n\n    for (const e of g) {\n      const _e = _slicedToArray(e, 2),\n            r = _e[0],\n            n = _e[1],\n            t = r * n,\n            o = Math.abs(x - t);\n\n      o < w && (w = o, f = e);\n    }\n\n    if (!f) return;\n\n    const _f = f,\n          _f2 = _slicedToArray(_f, 4),\n          S = _f2[2],\n          b = _f2[3];\n\n    return [w, S, s, b];\n  })))).filter(e => !!e);\n\n  if (!b.length) {\n    const e = r.find(e => w.includes(e));\n    return e ? A(0, \"BLOCKLISTED\", e) : A(1, \"FALLBACK\", `${w} (${S})`);\n  }\n\n  const _b$sort$ = _slicedToArray(b.sort(([e = Number.MAX_VALUE], [r = Number.MAX_VALUE]) => e - r)[0], 4),\n        P = _b$sort$[1],\n        C = _b$sort$[2],\n        y = _b$sort$[3];\n\n  if (-1 === P) return A(0, \"BLOCKLISTED\", C, P, y);\n  const L = h ? i : d;\n  let E = 0;\n\n  for (let e = 0; e < L.length; e++) P >= L[e] && (E = e);\n\n  return A(E, \"BENCHMARK\", C, P, y);\n});\n\nexport { l as getGPUTier };","map":null,"metadata":{},"sourceType":"module"}